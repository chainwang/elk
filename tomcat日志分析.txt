pattern="%h %l %u %t &quot;%r&quot; %s %b %D &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot;"
pattern这一句非常重要，用于表示日志的存储格式，一般为了方便会使用common或者combined，这两种自定义格式已经可以记录足够详细的信息，我这里使用了自定义方式。在这个pattern描述里：
%h表示访问来源的主机名或者IP地址；
%l表示客户端的标示，通常是 -；
%u表示得到了授权的访问者标示，通常都是 -；
%t表示日志事件的发生时间戳，用 [ 和 ] 括起来的；
&quot;%r&quot;表示用双引号&quot;括起来的访问命令和链接，比如“GET /resource/logo.png”；
%s表示HTTP状态码，如200和404等；
%b是服务器返回的数据量，以字节为单位；
%D表示服务器的响应时间，可以用于分析页面的执行效率；
&quot;%{Referer}i&quot;表示用两个双引号括起来的网址，用于告诉服务器这个访问请求是从哪个页面链接过来的；
&quot;%{User-Agent}i&quot;表示用双引号括起来的浏览器的HTTP代理信息，可以得到客户端使用了什么浏览器内核。



input {		
	file {  
		path => "/root/tomcat/logs/localhost_access_log*.txt"  
		sincedb_path => "/root/logstash_work_dir/config/sincedb_apache_access_log.txt"
		type => "apache_access_log"
		add_field => {"tomcatip" => "10.128.18.61"}
	}  
}

filter{	
	if [type] == "apache_access_log" {
		grok{
			match => { "message" => "%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{URIPATHPARAM:request}(?: HTTP/%{NUMBER:httpversion})?|-)\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{NUMBER:responsetime} \"(?:%{URI:referrer}|-)\" %{QS:agent}" }
		}				
		date{
			match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
			target => ["writetime"]
		}		
		mutate {
			convert => { 
				"response" => "integer" 
				"bytes" => "integer" 
				"responsetime" => "integer" 
			}
		}
	}
}

output {
	if [type] == "apache_access_log" {		
		elasticsearch {
			hosts => ["10.128.18.74:9200","10.128.18.75:9200","10.128.18.77:9200"]
			index => "logstash-apacheaccesslog-%{+YYYY.MM.dd}"
		}		
	}
}